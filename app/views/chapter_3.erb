      <div id="contentPane">

        <h1>
          3.&nbsp;&nbsp;Variables and Assignment
        </h1>
        <div class="fleur"><div class="fleur_stem">&nbsp;</div></div>
        <p>
                So far, whenever we have <span class="L2Pcode">puts</span>ed a string or a number, the thing
      we <span class="L2Pcode">puts</span>ed is gone.  What I mean is, if we wanted to print
      something out twice, we would have to type it in twice:

        </p>

        <pre class="L2PcodeBlock">puts '<span class="L2Pstring">...you can say that again...</span>'
puts '<span class="L2Pstring">...you can say that again...</span>'</pre>
        <pre class="L2PoutputBlock">
...you can say that again...
...you can say that again...
</pre>
        <p>
                It would be nice if we could just type it in once and then hang on to it...
      store it somewhere.
      Well, we can, of course&mdash;otherwise, I wouldn't have brought it up!

        </p>

        <p>
                To store the string in your computer's memory, we need to
      give the string a name.  Programmers often refer to this process
      as <dfn>assignment</dfn>,
      and they call the names <dfn>variables</dfn>.  This variable can be just
      about any sequence of letters and numbers, but the first character
      needs to be a lowercase letter.  Let's try that last program again,
      but this time I will give the string the name <span class="L2Pcode">myString</span> (though I could
      just as well have named it <span class="L2Pcode">str</span> or
      <span class="L2Pcode">myOwnLittleString</span> or <span class="L2Pcode">henryTheEighth</span>).

        </p>

        <pre class="L2PcodeBlock">myString = '<span class="L2Pstring">...you can say that again...</span>'
puts myString
puts myString</pre>
        <pre class="L2PoutputBlock">
...you can say that again...
...you can say that again...
</pre>
        <p>
                Whenever you tried to do something to <span class="L2Pcode">myString</span>, the program did it
      to <span class="L2Pcode">'<span class="L2Pstring">...you&nbsp;can&nbsp;say&nbsp;that&nbsp;again...</span>'</span> instead.  You can think of the
      variable <span class="L2Pcode">myString</span> as "pointing to" the string
      <span class="L2Pcode">'<span class="L2Pstring">...you&nbsp;can&nbsp;say&nbsp;that&nbsp;again...</span>'</span>.  Here's a slightly more interesting example:

        </p>

        <pre class="L2PcodeBlock">name = '<span class="L2Pstring">Patricia Rosanna Jessica Mildred Oppenheimer</span>'
puts '<span class="L2Pstring">My name is </span>' + name + '<span class="L2Pstring">.</span>'
puts '<span class="L2Pstring">Wow!  </span>' + name + '<span class="L2Pstring"> is a really long name!</span>'</pre>
        <pre class="L2PoutputBlock">
My name is Patricia Rosanna Jessica Mildred Oppenheimer.
Wow!  Patricia Rosanna Jessica Mildred Oppenheimer is a really long name!

</pre>
        <p>
                Also, just as we can <em>assign</em> an object to a variable,
      we can <em>reassign</em> a different object to that variable.
      (This is why we call them variables:  because what they
      point to can vary.)

        </p>
        <pre class="L2PcodeBlock">composer = '<span class="L2Pstring">Mozart</span>'
puts composer + '<span class="L2Pstring"> was &quot;da bomb&quot;, in his day.</span>'

composer = '<span class="L2Pstring">Beethoven</span>'
puts '<span class="L2Pstring">But I prefer </span>' + composer + '<span class="L2Pstring">, personally.</span>'</pre>

        <pre class="L2PoutputBlock">
Mozart was &quot;da bomb&quot;, in his day.
But I prefer Beethoven, personally.
</pre>
        <p>
                Of course, variables can point to any kind of object, not just strings:

        </p>
        <pre class="L2PcodeBlock">var = '<span class="L2Pstring">just another </span>' + '<span class="L2Pstring">string</span>'
puts var

var = <span class="L2Pnumber">5</span> * (<span class="L2Pnumber">1</span>+<span class="L2Pnumber">2</span>)
puts var</pre>

        <pre class="L2PoutputBlock">
just another string
15
</pre>
        <p>
                In fact, variables can point to just about anything...
      except other variables.
      So what happens if we try?

        </p>
        <pre class="L2PcodeBlock">var1 = <span class="L2Pnumber">8</span>
var2 = var1
puts var1
puts var2

puts '<span class="L2Pstring"></span>'

var1 = '<span class="L2Pstring">eight</span>'
puts var1
puts var2</pre>

        <pre class="L2PoutputBlock">
8
8

eight
8
</pre>
        <p>
                So first, when we tried to point <span class="L2Pcode">var2</span> to <span class="L2Pcode">var1</span>, it really
      pointed to <span class="L2Pcode"><span class="L2Pnumber">8</span></span> instead (just like <span class="L2Pcode">var1</span>

      was pointing to).  Then we had <span class="L2Pcode">var1</span> point to
      <span class="L2Pcode">'<span class="L2Pstring">eight</span>'</span>, but since <span class="L2Pcode">var2</span> was never really
      pointing at <span class="L2Pcode">var1</span>, it stays pointing at <span class="L2Pcode"><span class="L2Pnumber">8</span></span>.

        </p>

        <p>
                So now that we've got variables, numbers, and strings, let's learn how to
      <a href="/LearnToProgram/?Chapter=04">mix them all up</a>!

        </p>
        <div class="fleur"><div class="fleur_stem">&nbsp;</div></div>
        <p style="padding-bottom: 20px;">
          &copy; 2003-2009 Chris Pine
        </p>
      </div>

